<%- include("../../views/partials/admin/header") %>
  <div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
      <h4>Subcategory Management of <%=categoryName %> Wear</h4>
      <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addSubcategoryModal">
        <i class="fas fa-plus"></i> Add Subcategory
      </button>
    </div>

    <!-- Search -->
    <form
    action="/admin/subcategories<%= categoryId ? '/' + categoryId : '' %>"
    method="GET"
    class="d-flex mb-3"
    role="search"
    id="searchForm"
  >
      <input class="form-control me-2" type="search" placeholder="Search subcategory..." style="max-width: 200px" name="search"  value="<%= typeof searchQuery !== 'undefined' ? searchQuery : '' %>">
      <button class="btn btn-sm btn-outline-dark" type="submit"> <i class="fas fa-search"></i></button>
      <% if (searchQuery) { %>
        <a href="/admin/subcategories<%= categoryId ? '/' + categoryId : '' %>" class="btn btn-outline-secondary ms-2">Clear</a>
      <% } %>
      
   
    </form>

    <!-- Table -->
    <div class="card">
      <div class="card-body">
        <table class="table table-bordered">
          <thead class="table-dark">
            <tr>
              <th>SL NO</th>
              <!-- <th>Category</th> -->
              <th>Subcategory</th>
              <th>Image</th>
              <th>Description</th>
              <th>Offer %</th>
              <th>Valid Until</th>
              <th>Status</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody>
            <% if (subcategories.length === 0) { %>
              <tr>
                <td colspan="9" class="text-center">No subcategories found</td>
              </tr>
            <% } else { %>
              <% subcategories.forEach((sub, index) => { %>
                <tr>
                  <td><%= index + 1 + ((currentPage - 1) * 9) %></td>
                
                  <td><%= sub.name %></td>
                  <td>
                    <img src="/uploads/categories/<%= sub.image %>" alt="Subcategory Image" width="50" height="50"  style="object-fit: cover; cursor: pointer;"   onclick="openImageModal('/uploads/categories/<%= sub.image %>')" />
                  </td>
                  <td><%= sub.description %></td>
                  <td><%= sub.offer ? sub.offer + '%' : '-' %></td>
                  <td><%= sub.offerValidUntil ? new Date(sub.offerValidUntil).toLocaleDateString('en-GB') : '-' %></td>
                  <td>
                    <% if (sub.isListed) { %>
                      <span class="badge bg-success">Listed</span>
                    <% } else { %>
                      <span class="badge bg-danger">Unlisted</span>
                    <% } %>
                  </td>
                  <td>
                    <button
                    class="btn btn-sm btn-info"
                    data-bs-toggle="modal"
                    data-bs-target="#editSubcategoryModal"
                    onclick="populateSubcategoryEditModal('<%= sub._id %>', '<%= sub.name %>', '<%= sub.description %>', '<%= sub.image %>')"
                  >
                    <i class="fas fa-edit"></i>
                  </button>
                  
                  <button class="btn btn-sm btn-danger" onclick="confirmDeleteSubcategory('<%= categoryId %>', '<%= sub._id %>')">
                    <i class="fas fa-trash-alt"></i>
                  </button>
                  
                  <% if (!Number(sub.offer)) { %>
                    <button 
                      class="btn btn-sm btn-primary me-1" 
                      title="Add Offer" 
                      onclick="addSubcategoryOffer('<%= categoryId %>', '<%= sub._id %>')">
                      Add Offer
                    </button>
                  <% } else { %>
                    <button 
                      class="btn btn-sm btn-warning" 
                      onclick="removeSubcategoryOffer('<%= categoryId %>', '<%= sub._id %>')">
                      <i class="fas fa-times-circle"></i> Remove Offer
                    </button>
                  <% } %>
                  
                    <% if (sub.isListed) { %>
                      <button 
                        class="btn btn-sm btn-secondary me-1"
                        title="Unlist"
                        onclick="toggleSubcategoryStatus('<%= categoryId %>', '<%= sub._id %>', true)">
                        Unlist
                      </button>
                    <% } else { %>
                      <button 
                        class="btn btn-sm btn-success me-1"
                        title="List"
                        onclick="toggleSubcategoryStatus('<%= categoryId %>', '<%= sub._id %>', false)">
                        List
                      </button>
                    <% } %>
                    
                  </td>
                </tr>
              <% }) %>
            <% } %>
          </tbody>
        </table>
      </div>
    </div>
    
  </div>
  <!-- PAGINATION -->
<!-- PAGINATION -->
<div class="pagination-container">
  <nav>
    <ul class="pagination pagination-sm">
      <% if (currentPage > 1) { %>
        <li class="page-item">
          <a class="page-link" href="?page=<%= currentPage - 1 %><%= searchQuery ? '&search=' + searchQuery : '' %>">Previous</a>
        </li>
      <% } %>
      <% for (let i = 1; i <= totalPages; i++) { %>
        <li class="page-item <%= currentPage === i ? 'active' : '' %>">
          <a class="page-link" href="?page=<%= i %><%= searchQuery ? '&search=' + searchQuery : '' %>"><%= i %></a>
        </li>
      <% } %>
      <% if (currentPage < totalPages) { %>
        <li class="page-item">
          <a class="page-link" href="?page=<%= currentPage + 1 %><%= searchQuery ? '&search=' + searchQuery : '' %>">Next</a>
        </li>
      <% } %>
    </ul>
  </nav>
</div>
<!-- </nav> -->

  <!-- Add Modal -->
  <div class="modal fade" id="addSubcategoryModal" tabindex="-1" aria-labelledby="addSubcategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog">
    <form class="modal-content" action="/admin/<%= categoryId %>/addSubcategory" method="POST" enctype="multipart/form-data">

        <div class="modal-header">
          <h5 class="modal-title">Add Subcategory of <%=categoryName %> Wear </h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body">
         
          <div class="mb-3">
            <label class="form-label">Subcategory Name</label>
            <input type="text" name="name" class="form-control" required />
          </div>
          <div class="mb-3">
            <label class="form-label">Description</label>
            <textarea name="description" class="form-control" rows="3" required></textarea>
          </div>
          <div class="mb-3">
            <label class="form-label">Image</label>
            <input type="file" name="image" class="form-control"  accept="image/png, image/jpeg" required />
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="submit" class="btn btn-primary">Save</button>
        </div>
      </form>
    </div>
  </div>

  <!-- Edit Modal -->
  <div class="modal fade" id="editSubcategoryModal" tabindex="-1" aria-labelledby="editSubcategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <form id="editSubcategoryForm" class="modal-content" enctype="multipart/form-data" method="POST" action="#">
        <input type="hidden" id="edit-subcategory-id" name="subcategoryId">
        <input type="hidden" id="edit-category-id" name="categoryId" value="<%= categoryId %>">
        <div class="modal-header">
          <h5 class="modal-title">Edit Subcategory of <%=categoryName %> </h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body">
         
          <div class="mb-3">
            <label class="form-label">Subcategory Name</label>
            <input id="edit-subcategory-name" type="text" class="form-control" name="name" required />
          </div>
          <div class="mb-3">
            <label class="form-label">Description</label>
            <textarea id="edit-subcategory-description" name="description" class="form-control" rows="3" required>Comfortable cotton leggings</textarea>
          </div>
          <div class="mb-3">
            <label for="existing-category-image" class="form-label">Current Image</label><br />
            <img
              id="existing-subcategory-image"
              src=""
              alt="Category Image"
              style="width: 100px; height: 100px; object-fit: cover; border-radius: 6px"
            />
          </div>
          <div class="mb-3">
            <label for="edit-category-image-upload" class="form-label">Change Image (optional)</label>
            <input
              type="file"
              name="image"
              id="edit-subcategory-image-upload"
              class="form-control"
              accept="image/png, image/jpeg"
            />
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="submit" class="btn btn-primary">Update</button>
        </div>
      </form>
    </div>
  </div>
  <!-- Modal for image preview -->
<div class="modal fade" id="imagePreviewModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered modal-sm">
    <div class="modal-content p-3 text-center">
      <img 
        id="modalImage" 
        src="" 
        alt="Full Image" 
        class="img-fluid rounded" 
        style="max-height: 400px; width: auto; object-fit: contain;"
      />
      <button type="button" class="btn btn-secondary mt-3" data-bs-dismiss="modal">
        Close
      </button>
    </div>
  </div>
</div>

<script>
  function openImageModal(src) {
    document.getElementById("modalImage").src = src;
    const modal = new bootstrap.Modal(document.getElementById("imagePreviewModal"));
    modal.show();
  }
</script>
  
  <script>
    document.querySelector('form[action^="/admin/"][action$="/addSubcategory"]')?.addEventListener('submit', async function (e) {
      e.preventDefault();
  
      const form = e.target;
      const formData = new FormData(form);
  
      const name = formData.get('name')?.trim();
      const description = formData.get('description')?.trim();
      const image = formData.get('image');
  
      if (!name || !description || !image?.name) {
        return Swal.fire({
          icon: 'warning',
          title: 'All fields are required!',
          text: 'Please fill in all the details before submitting.',
          confirmButtonColor: '#ffc107'
        });
      }
  
      if (!['image/png', 'image/jpeg'].includes(image.type)) {
        return Swal.fire({
          icon: 'error',
          title: 'Invalid Image Type',
          text: 'Only PNG or JPEG files are allowed.',
          confirmButtonColor: '#dc3545'
        });
      }
  
      try {
        const response = await fetch(form.action, {
          method: 'POST',
          body: formData
        });
  
        const result = await response.json();
  
        if (result.success) {
          Swal.fire({
            icon: 'success',
            title: 'Subcategory Added!',
            text: result.message,
            confirmButtonColor: '#198754'
          }).then(() => {
            window.location.reload();
          });
        } else {
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: result.message,
            confirmButtonColor: '#dc3545'
          });
        }
      } catch (err) {
        Swal.fire({
          icon: 'error',
          title: 'Server Error',
          text: 'Something went wrong!',
          confirmButtonColor: '#dc3545'
        });
      }
    });
    //Add offer
  
    function addSubcategoryOffer(categoryId, subcategoryId) {
      Swal.fire({
        title: 'Add Subcategory Offer',
        html: `
          <input type="number" id="percentage" class="swal2-input" placeholder="Offer % (1–99)" min="1" max="99">
          <input type="date" id="validUntil" class="swal2-input" placeholder="Valid Until">
        `,
        focusConfirm: false,
        showCancelButton: true,
        confirmButtonText: 'Add',
        preConfirm: () => {
          const percentage = parseInt(document.getElementById('percentage').value);
          const validUntil = document.getElementById('validUntil').value;
    
          if (!percentage || percentage < 1 || percentage > 99) {
            Swal.showValidationMessage('Please enter a valid percentage (1–99)');
            return false;
          }
    
          if (!validUntil) {
            Swal.showValidationMessage('Please select an offer valid date');
            return false;
          }
    
          return fetch('/admin/addSubcategoryOffer', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ categoryId, subcategoryId, percentage, validUntil })
          })
            .then(res => res.json())
            .then(data => {
              if (!data.status) {
                throw new Error(data.message);
              }
              return data;
            })
            .catch(err => {
              Swal.showValidationMessage(`Request failed: ${err.message}`);
            });
        }
      }).then((result) => {
        if (result.isConfirmed) {
          Swal.fire({
            icon: 'success',
            title: 'Success!',
            text: result.value.message,
            timer: 1500,
            showConfirmButton: false
          }).then(() => location.reload());
        }
      });
    }
    
    // Deleting offer
    function removeSubcategoryOffer(categoryId, subcategoryId) {
      Swal.fire({
        title: 'Are you sure?',
        text: "This will remove the offer from this subcategory!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, delete it!'
      }).then((result) => {
        if (result.isConfirmed) {
          fetch('/admin/removeSubcategoryOffer', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ categoryId, subcategoryId })
          })
          .then(response => response.json())
          .then(data => {
            if (data.status) {
              Swal.fire(
                'Deleted!',
                'The offer has been successfully removed.',
                'success'
              ).then(() => {
                location.reload();
              });
            } else {
              Swal.fire(
                'Error!',
                data.message || 'Failed to delete the offer.',
                'error'
              );
            }
          })
          .catch(error => {
            Swal.fire(
              'Error!',
              'Something went wrong while deleting the offer.',
              'error'
            );
          });
        }
      });
    }
    
    
    function toggleSubcategoryStatus(categoryId, subcategoryId, isCurrentlyListed) {
      const action = isCurrentlyListed ? "unlist" : "list";
      const messageText = `You want to ${action} this subcategory?`;
    
      Swal.fire({
        title: 'Are you sure?',
        text: messageText,
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: `Yes, ${action} it!`
      }).then((result) => {
        if (result.isConfirmed) {
          fetch(`/admin/${categoryId}/toggleSubcategoryStatus/${subcategoryId}`, {
            method: 'PATCH' // or POST if you prefer
          })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              Swal.fire(
                `${action.charAt(0).toUpperCase() + action.slice(1)}ed!`,
                `Subcategory has been ${action}ed.`,
                'success'
              ).then(() => {
                location.reload();
              });
            } else {
              Swal.fire('Error', data.message || 'Failed to update status', 'error');
            }
          })
          .catch(error => {
            console.error('Error:', error);
            Swal.fire('Error', 'An error occurred while updating status', 'error');
          });
        }
      });
    }
    
    //DELETE CATEGORY
    
    function confirmDeleteSubcategory(categoryId, subcategoryId) {
      Swal.fire({
        title: "Are you sure?",
        text: "This will permanently delete the subcategory!",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#d33",
        cancelButtonColor: "#3085d6",
        confirmButtonText: "Yes, delete it!"
      }).then((result) => {
        if (result.isConfirmed) {
          fetch(`/admin/${categoryId}/deleteSubcategory/${subcategoryId}`, {
            method: 'DELETE'
          })
            .then(response => response.json())
            .then(data => {
              if (data.success) {
                Swal.fire("Deleted!", data.message, "success").then(() => {
                  location.reload();
                });
              } else {
                Swal.fire("Error!", data.message || "Failed to delete subcategory.", "error");
              }
            })
            .catch(err => {
              console.error("Delete error:", err);
              Swal.fire("Error!", "Something went wrong.", "error");
            });
        }
      });
    }
    
    
    
      
  </script>
  <script>
    document.addEventListener("DOMContentLoaded", function () {
      document.getElementById("editSubcategoryForm").addEventListener("submit", function (e) {
        e.preventDefault();
        const form = e.target;
        const categoryId = document.getElementById("edit-category-id").value;
        const subcategoryId = document.getElementById("edit-subcategory-id").value;
        const formData = new FormData(form);
  
        fetch(`/admin/${categoryId}/editSubcategory/${subcategoryId}`, {
          method: "POST",
          body: formData
        })
          .then(res => res.json())
          .then(data => {
            if (data.success) {
              Swal.fire("Success", data.message, "success").then(() => {
                const modal = bootstrap.Modal.getInstance(document.getElementById("editSubcategoryModal"));
                modal.hide();
                location.reload();
              });
            } else {
              Swal.fire("Error", data.message || "Something went wrong", "error");
            }
          })
          .catch(err => {
            console.error(err);
            Swal.fire("Error", "Server Error", "error");
          });
      });
  
      window.populateSubcategoryEditModal = function (subcategoryId, name, description, image) {
        document.getElementById("edit-subcategory-id").value = subcategoryId;
        document.getElementById("edit-subcategory-name").value = name;
        document.getElementById("edit-subcategory-description").value = description;
        document.getElementById("existing-subcategory-image").src = `/uploads/categories/${image}`;
      };
    });
  </script>
  
      
    

  <%- include("../../views/partials/admin/footer") %>