<%- include("../../views/partials/admin/header") %>
<style>
  body {
    padding: 20px;
    font-family: 'Poppins', sans-serif;
    background: #f8f9fa;
  }
  .table img {
    border-radius: 6px;
    cursor: pointer;
  }
  .card {
    box-shadow: 0 2px 8px rgb(0 0 0 / 0.1);
  }
</style>
</head>
<body>

<!-- PAGE HEADER -->
<div class="d-flex justify-content-between align-items-center mb-4 mt-5">
  <h3>Category Management</h3>
  <div class="d-flex align-items-center">
    <button class="btn btn-primary me-3" data-bs-toggle="modal" data-bs-target="#addCategoryModal">
      <i class="fas fa-plus"></i> Add Category
    </button>
    <form id="searchForm" method="GET" action="/admin/category" class="d-flex align-items-center">
      <input
        type="text"
        name="search"
        id="searchInput"
        placeholder="Search category..."
        class="form-control"
        style="width: 250px;"
        value="<%= typeof searchQuery !== 'undefined' ? searchQuery : '' %>"
        autocomplete="off"
      />
      <button type="submit" class="btn btn-outline-dark ms-2" title="Search">
        <i class="fas fa-search"></i>
      </button>
      <% if (searchQuery) { %>
        <a href="/admin/category" class="btn btn-outline-secondary">Clear</a>
      <% } %>
    </form>
  </div>
</div>

<!-- CATEGORY TABLE -->
<div class="card rounded">
  <div class="card-body p-0">
    <table class="table table-hover mb-0">
      <thead class="table-dark">
        <tr>
          <th>SL NO</th>
          <th>Category Name</th>
          <th>Image</th>
          <th>Description</th>
          <th>Status</th>
          <th>Offer %</th>
          <th>Valid Until</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody>
        <% if (cat.length === 0) { %>
          <tr><td colspan="8" class="text-center">No categories found</td></tr>
        <% } else { %>
          <% cat.forEach((category, index) => { %>
        <tr>
          <td><%= index + 1 %></td>
          <td><%= category.name %></td>
          <td>
            <img
              src="/uploads/categories/<%= category.categoryImage %>"
              alt="image"
              width="50"
              height="50"
              onclick="openImageModal('/uploads/categories/<%= category.categoryImage %>')"
            />
          </td>
          <td><%= category.description.length > 30 ? category.description.substring(0, 30) + '...' : category.description %></td>

          <td>
            <% if (category.isListed) { %>
              <span class="badge bg-success">Listed</span>
            <% } else { %>
              <span class="badge bg-danger">Unlisted</span>
            <% } %>
          </td>
          <td><%= category.categoryOffer ? category.categoryOffer + "%" : "-" %></td>
          <% let formattedDate = category.offerValidUntil
              ? new Date(category.offerValidUntil).toLocaleDateString('en-GB')
              : "-"; %>
          <td><%= formattedDate %></td>
          <td>
            <button class="btn btn-sm btn-info me-1" title="Edit" data-bs-toggle="modal" data-bs-target="#editCategoryModal" onclick="populateEditModal('<%= category._id %>', '<%= category.name %>', '<%= category.description %>', '<%= category.categoryImage %>')">
              <i class="fas fa-edit"></i>
            </button>
            <button class="btn btn-sm btn-danger me-1" title="Delete" onclick="deleteCategory('<%= category._id %>')">
              <i class="fas fa-trash-alt"></i>
            </button>
            <% if (!category.categoryOffer || category.categoryOffer === 0) { %>
             
              <button class="btn btn-sm btn-primary me-1" title="Add Offer" onclick="addOffer('<%= category._id %>')" >Add Offer</button>
            <% } else { %>
               
                <button class="btn btn-sm btn-primary me-1" title="Remove offer" onclick="deleteOffer('<%= category._id %>')" >Remove Offer</button>

            <% } %>
          
            <% if (category.isListed) { %>
              <button class="btn btn-sm btn-secondary me-1" title="Unlist" onclick="unlistCategory('<%= category._id %>')">Unlist</button>
          <% } else { %>
            <button class="btn btn-sm btn-secondary me-1" title="Unlist"  onclick="listCategory('<%= category._id %>')">List</button>
            
          <% } %>
            
           
            <a href="/admin/subcategories/<%= category._id %>" class="btn btn-sm btn-dark" title="Manage Subcategories">
              <i class="fas fa-layer-group"></i>
            </a>
            
          </td>
        </tr>
       
        <% }) %>
        <% } %>
      </tbody>
    </table>
  </div>
</div>


 <!-- PAGINATION -->
<div class="pagination-container">
  <nav>
    <ul class="pagination pagination-sm">
      <% if (currentPage > 1) { %>
        <li class="page-item">
          <a class="page-link" href="?page=<%= currentPage - 1 %><%= searchQuery ? '&search=' + searchQuery : '' %>">Previous</a>
        </li>
      <% } %>
      <% for (let i = 1; i <= totalPages; i++) { %>
        <li class="page-item <%= currentPage === i ? 'active' : '' %>">
          <a class="page-link" href="?page=<%= i %><%= searchQuery ? '&search=' + searchQuery : '' %>"><%= i %></a>
        </li>
      <% } %>
      <% if (currentPage < totalPages) { %>
        <li class="page-item">
          <a class="page-link" href="?page=<%= currentPage + 1 %><%= searchQuery ? '&search=' + searchQuery : '' %>">Next</a>
        </li>
      <% } %>
    </ul> 
  </nav>
</div>

<!-- ADD CATEGORY MODAL -->
<div class="modal fade" id="addCategoryModal" tabindex="-1" aria-labelledby="addCategoryModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg modal-dialog-centered">
    <form id="addCategoryForm" class="modal-content" enctype="multipart/form-data" method="POST" action="/admin/addCategory">
      <div class="modal-header">
        <h5 class="modal-title" id="addCategoryModalLabel">Add New Category</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="mb-3">
          <label for="categoryName" class="form-label">Category Name</label>
          <input type="text" name="name" class="form-control" id="categoryName" required />
        </div>
        <div class="mb-3">
          <label for="categoryDescription" class="form-label">Description</label>
          <textarea name="description" class="form-control" id="categoryDescription" rows="3" required></textarea>
        </div>
        <div class="mb-3">
          <label for="categoryGender" class="form-label">Gender</label>
          <select name="gender" id="categoryGender" class="form-select" required>
            <option value="Women" selected>Women</option>
          </select>
        </div>
        <div class="mb-3">
          <label for="categoryImage" class="form-label">Product Gallery</label>
          <input
            type="file"
            name="categoryImage"
            id="categoryImage"
            class="form-control"
            accept="image/png, image/jpeg"
            required
          />
        </div>
      </div>
      <div class="modal-footer">
        <!-- <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
          Cancel
        </button> -->
       <div class="d-flex justify-content-between">
          <button type="reset" class="btn btn-outline-secondary">Cancel</button>
          <button type="submit" class="btn btn-primary">Save Category</button>
        </div>
      </div>
    </form>
  </div>
</div>

<!-- EDIT CATEGORY MODAL -->
<div class="modal fade" id="editCategoryModal" tabindex="-1" aria-labelledby="editCategoryModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg modal-dialog-centered">
    <form id="editCategoryForm" class="modal-content" enctype="multipart/form-data" method="POST" action="#">
      <input type="hidden" id="edit-category-id" name="categoryId" />
      <div class="modal-header">
        <h5 class="modal-title" id="editCategoryModalLabel">Edit Category</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="mb-3">
          <label for="edit-category-name" class="form-label">Category Name</label>
          <input type="text" name="name" class="form-control" id="edit-category-name" required />
        </div>
        <div class="mb-3">
          <label for="edit-category-description" class="form-label">Description</label>
          <textarea name="description" class="form-control" id="edit-category-description" rows="3" required></textarea>
        </div>
        <div class="mb-3">
          <label for="existing-category-image" class="form-label">Current Image</label><br />
          <img
            id="existing-category-image"
            src=""
            alt="Category Image"
            style="width: 100px; height: 100px; object-fit: cover; border-radius: 6px"
          />
        </div>
        <div class="mb-3">
          <label for="edit-category-image-upload" class="form-label">Change Image (optional)</label>
          <input
            type="file"
            name="categoryImage"
            id="edit-category-image-upload"
            class="form-control"
            accept="image/png, image/jpeg"
          />
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
          Cancel
        </button>
        <button type="submit" class="btn btn-primary">Update Category</button>
      </div>
    </form>
  </div>
</div>

<!-- Modal for image preview -->
<div class="modal fade" id="imagePreviewModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered modal-sm">
    <div class="modal-content p-3 text-center">
      <img 
        id="modalImage" 
        src="" 
        alt="Full Image" 
        class="img-fluid rounded" 
        style="max-height: 400px; width: auto; object-fit: contain;"
      />
      <button type="button" class="btn btn-secondary mt-3" data-bs-dismiss="modal">
        Close
      </button>
    </div>
  </div>
</div>
<script>
  function openImageModal(src) {
    document.getElementById("modalImage").src = src;
    const modal = new bootstrap.Modal(document.getElementById("imagePreviewModal"));
    modal.show();
  }

</script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
  document.querySelector('form[action="/admin/addCategory"]').addEventListener('submit', async function (e) {
    e.preventDefault();

    const form = e.target;
    const formData = new FormData(form);

    // FRONTEND VALIDATION
    const name = formData.get('name').trim();
    const description = formData.get('description').trim();
    const gender = formData.get('gender');
    const image = formData.get('categoryImage');

    if (!name || !description || !gender || !image.name) {
      return Swal.fire({
        icon: 'warning',
        title: 'All fields are required!',
        text: 'Please fill in all the details before submitting.',
        confirmButtonColor: '#ffc107'
      });
    }

    // Optional: Validate image type
    if (!['image/png', 'image/jpeg'].includes(image.type)) {
      return Swal.fire({
        icon: 'error',
        title: 'Invalid Image Type',
        text: 'Only PNG or JPEG files are allowed.',
        confirmButtonColor: '#dc3545'
      });
    }

    // SUBMIT VIA FETCH
    try {
      const response = await fetch('/admin/addCategory', {
        method: 'POST',
        body: formData
      });

      const result = await response.json();

      if (result.success) {
        Swal.fire({
          icon: 'success',
          title: 'Success!',
          text: result.message,
          confirmButtonColor: '#198754'
        }).then(() => {
          window.location.reload();
        });
      } else {
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: result.message,
          confirmButtonColor: '#dc3545'
        });
      }
    } catch (err) {
      Swal.fire({
        icon: 'error',
        title: 'Server Error',
        text: 'Something went wrong!',
        confirmButtonColor: '#dc3545'
      });
    }
  });
  
  //Add offer

  function addOffer(categoryId) {
    Swal.fire({
      title: 'Add Category Offer',
      html:
        `<input type="number" id="percentage" class="swal2-input" placeholder="Offer % (1–99)" min="1" max="99">
         <input type="date" id="validUntil" class="swal2-input" placeholder="Valid Until">`,
      focusConfirm: false,
      showCancelButton: true,
      confirmButtonText: 'Add',
      preConfirm: () => {
        const percentage = parseInt(document.getElementById('percentage').value);
        const validUntil = document.getElementById('validUntil').value;
  
        if (!percentage || percentage < 1 || percentage > 99) {
          Swal.showValidationMessage('Please enter a valid percentage (1–99)');
          return false;
        }
  
        if (!validUntil) {
          Swal.showValidationMessage('Please select an offer valid date');
          return false;
        }
  
        return fetch('/admin/addCategoryOffer', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ categoryId, percentage, validUntil })
        })
          .then(res => res.json())
          .then(data => {
            if (!data.status) {
              throw new Error(data.message);
            }
            return data;
          })
          .catch(err => {
            Swal.showValidationMessage(`Request failed: ${err.message}`);
          });
      }
    }).then((result) => {
      if (result.isConfirmed) {
        Swal.fire({
          icon: 'success',
          title: 'Success!',
          text: result.value.message,
          timer: 1500,
          showConfirmButton: false
        }).then(() => location.reload());
      }
    });
  }
  // Deleting offer
  function deleteOffer(categoryId) {
    Swal.fire({
      title: 'Are you sure?',
      text: "This will remove the offer from this category!",
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#3085d6',
      cancelButtonColor: '#d33',
      confirmButtonText: 'Yes, delete it!'
    }).then((result) => {
      if (result.isConfirmed) {
        fetch('/admin/removeCategoryOffer', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ categoryId })
        })
        .then(response => response.json())
        .then(data => {
          if (data.status) {
            Swal.fire(
              'Deleted!',
              'The offer has been successfully removed.',
              'success'
            ).then(() => {
              location.reload();
            });
          } else {
            Swal.fire(
              'Error!',
              data.message || 'Failed to delete the offer.',
              'error'
            );
          }
        })
        .catch(error => {
          Swal.fire(
            'Error!',
            'Something went wrong while deleting the offer.',
            'error'
          );
        });
      }
    });
  }
  
  // Unlist Category Function
  function unlistCategory(id) {
    Swal.fire({
      title: 'Are you sure?',
      text: "You want to unlist this category?",
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#3085d6',
      cancelButtonColor: '#d33',
      confirmButtonText: 'Yes, unlist it!'
    }).then((result) => {
      if (result.isConfirmed) {
        fetch(`/admin/listCategory?id=${id}`, {
          method: 'GET'
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            Swal.fire('Unlisted!', 'Category has been unlisted.', 'success').then(() => {
              location.reload();
            });
          } else {
            Swal.fire('Error', data.message || 'Failed to unlist category', 'error');
          }
        })
        .catch(error => {
          console.error('Error:', error);
          Swal.fire('Error', 'An error occurred while unlisting the category', 'error');
        });
      }
    });
  }

  // List Category Function
  function listCategory(id) {
    Swal.fire({
      title: 'Are you sure?',
      text: "You want to list this category?",
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#3085d6',
      cancelButtonColor: '#d33',
      confirmButtonText: 'Yes, list it!'
    }).then((result) => {
      if (result.isConfirmed) {
        fetch(`/admin/unListCategory?id=${id}`, {
          method: 'GET'
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            Swal.fire('Listed!', 'Category has been listed.', 'success').then(() => {
              location.reload();
            });
          } else {
            Swal.fire('Error', data.message || 'Failed to list category', 'error');
          }
        })
        .catch(error => {
          console.error('Error:', error);
          Swal.fire('Error', 'An error occurred while listing the category', 'error');
        });
      }
    });
  }
  //DELETE CATEGORY
  
    function deleteCategory(categoryId) {
      Swal.fire({
        title: "Are you sure?",
        text: "This will permanently delete the category!",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#d33",
        cancelButtonColor: "#3085d6",
        confirmButtonText: "Yes, delete it!"
      }).then((result) => {
        if (result.isConfirmed) {
          fetch(`/admin/deleteCategory/${categoryId}`, {
            method: 'DELETE',
          })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              Swal.fire("Deleted!", data.message, "success").then(() => {
                location.reload();
              });
            } else {
              Swal.fire("Error!", data.message || "Failed to delete category.", "error");
            }
          })
          .catch(err => {
            Swal.fire("Error!", "Something went wrong.", "error");
          });
        }
      });
    }
  
  
  
    
</script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
    
      document.getElementById("editCategoryForm").addEventListener("submit", function (e) {
        e.preventDefault(); // prevent normal form post
    
        const form = e.target;
        const categoryId = document.getElementById('edit-category-id').value;
        const formData = new FormData(form); // contains all fields including file
    
        fetch(`/admin/editCategory/${categoryId}`, {
          method: "POST",
          body: formData
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            Swal.fire({
              icon: "success",
              title: "Updated!",
              text: data.message
            }).then(() => {
              const modal = bootstrap.Modal.getInstance(document.getElementById('editCategoryModal'));
              modal.hide();
              location.reload();
            });
          } else {
            Swal.fire("Error", data.message || "Something went wrong", "error");
          }
        })
        .catch(error => {
          console.error("Fetch Error:", error);
          Swal.fire("Error", "Server error occurred!", "error");
        });
      });
    
      window.populateEditModal = function (id, name, description, image) {
        document.getElementById('edit-category-id').value = id;
        document.getElementById('edit-category-name').value = name;
        document.getElementById('edit-category-description').value = description;
        document.getElementById('existing-category-image').src = `/uploads/categories/${image}`;
        
        // Keep this line to set the correct action URL for safety fallback
        document.getElementById('editCategoryForm').action = `/admin/editCategory/${id}`;
      };
    });
    </script>
    
  

<%- include("../../views/partials/admin/footer") %>
