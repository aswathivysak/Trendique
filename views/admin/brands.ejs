<%- include("../../views/partials/admin/header") %>
<style>
    .pagination-container {
      text-align: center;
      margin-top: 20px;
    }
    .pagination a,
    .pagination .current-page {
      display: inline-block;
      padding: 5px 10px;
      margin: 0 2px;
      border: 1px solid #ddd;
      text-decoration: none;
      color: #333;
    }
    .pagination a:hover {
      background-color: #f5f5f5;
    }
    .brand-logo {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      overflow: hidden;
      margin: 0 auto;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    .brand-logo img {
      max-width: 100%;
      max-height: 100%;
      object-fit: contain;
    }
    /* Button color overrides */
    .btn-block {
      background-color: #fd7e14;
      border-color: #fd7e14;
      color: white;
    }
    .btn-block:hover {
      background-color: #e67e22;
      border-color: #e67e22;
      color: white;
    }
    .btn-unblock {
      background-color: #0dcaf0;
      border-color: #0dcaf0;
      color: white;
    }
    .btn-unblock:hover {
      background-color: #31d2f2;
      border-color: #31d2f2;
      color: white;
    }
    .btn-delete {
      background-color: #dc3545;
      border-color: #dc3545;
      color: white;
    }
    .btn-delete:hover {
      background-color: #bb2d3b;
      border-color: #bb2d3b;
      color: white;
    }
    .btn-edit {
      background-color: #198754;
      border-color: #198754;
      color: white;
    }
    .btn-edit:hover {
      background-color: #157347;
      border-color: #157347;
      color: white;
    }
    .btn-offer-add {
      background-color: #6610f2;
      border-color: #6610f2;
      color: white;
    }
    .btn-offer-add:hover {
      background-color: #520dc2;
      border-color: #520dc2;
      color: white;
    }
    .btn-offer-remove {
      background-color: #6c757d;
      border-color: #6c757d;
      color: white;
    }
    .btn-offer-remove:hover {
      background-color: #5a6268;
      border-color: #5a6268;
      color: white;
    }
    /* Table tweaks */
    table.table thead th {
      vertical-align: middle;
      text-align: center;
      white-space: nowrap;
    }
    table.table tbody td {
      vertical-align: middle;
      text-align: center;
      white-space: nowrap;
    }
    table.table tbody td.text-start {
      text-align: left;
    }
    /* Actions cell: buttons wrap nicely */
    td.actions-cell {
      display: flex;
      flex-wrap: wrap;
      gap: 6px;
      justify-content: flex-start;
      min-width: 120px;
    }
    td.actions-cell button {
      flex: 0 0 38px;
      height: 38px;
      padding: 0;
      font-size: 1.25rem;
      display: flex;
      align-items: center;
      justify-content: center;
      border-radius: 4px;
    }
    /* Search form alignment */
    form.d-flex.mb-3 {
      justify-content: flex-start;
      gap: 8px;
    }
    form.d-flex.mb-3 input[type="search"] {
      max-width: 250px;
      flex-grow: 1;
    }
    form.d-flex.mb-3 button {
      min-width: 50px;
      padding: 0 12px;
    }
  </style>
</head>
<body>
  <section class="container my-4">
    <div class="content-header mb-3">
      <h2 class="content-title card-title">Brand Management</h2>
    </div>

    <div class="card p-4">
      <div class="row">
        <!-- Add Brand Form -->
        <div class="col-md-4">
          <form action="#" method="POST" action="/admin/brands" enctype="multipart/form-data" id="addBrandForm">
            <div class="mb-4">
              <label for="brand_name" class="form-label">Brand Name</label>
              <input
                type="text"
                id="brand_name"
                name="name"
                placeholder="Type here"
                class="form-control"
                required
              />
            </div>
            <label for="brand_image" class="form-label">Brand Image</label>
            <div class="mb-3">
              <input
                type="file"
                id="brand_image"
                name="image"
                class="form-control border"
                accept="image/*"
                required
              />
            </div>
            <div class="d-grid">
              <button class="btn btn-primary mt-2" type="submit">Add Brand</button>
            </div>
          </form>
        </div>

        <!-- Brands List and Search -->
        <div class="col-md-8">
          <!-- Search Form -->
          <form id="searchForm" method="GET" action="/admin/brands" class="d-flex mb-3">
            <input
              type="search"
              name="search"
              id="searchInput"
              placeholder="Search brands..."
              class="form-control me-2"
              style="width: 250px;"
              value="<%= typeof searchQuery !== 'undefined' ? searchQuery : '' %>"
              autocomplete="off"
            />
            <button type="submit" class="btn btn-primary" title="Search">
              <i class="fas fa-search"></i>
            </button>
            <% if (searchQuery) { %>
              <a href="/admin/brands" class="btn btn-outline-secondary">Clear</a>
            <% } %>
          </form>
          

          <div class="table-responsive">
            <table class="table table-hover align-middle">
              <thead class="table-dark">
                <tr>
                  <th>SL NO</th>
                  <th>Brand</th>
                  <th>Logo</th>
                  <th>Status</th>
                  <th>Offer (%)</th>
                  <th>Offer Valid Until</th>
                  <th>Actions</th>
                </tr>
              </thead>
              <tbody>
                <% if (brands.length === 0) { %>
                  <tr><td colspan="8" class="text-center">No brands found</td></tr>
                <% } else { %>
                  <% brands.forEach((brand, index) => { %>
                <tr>
                  <td><%= index + 1 %></td>
                  <td class="text-start"><%= brand. brandName %></td>
                  <td class="text-center">
                    <div class="brand-logo">
                      <img
                      src="/uploads/categories/<%= brand.brandImage %>"
                      alt="image"
                      width="50"
                      height="50"
                      onclick="openImageModal('/uploads/categories/<%= brand.brandImage %>')" 
                    />
                    </div>
                  </td>
                  <td class="text-center">
                    <% if (brand.isBlocked) { %>
                      <span class="badge rounded-pill bg-success" style="width: 70px;">Blocked</span>
                    <% } else { %>
                      <span class="badge rounded-pill bg-success" style="width: 70px;">Active</span>
                    <% } %>

                  </td>
                <td class="text-center"><%= brand. offer ? brand. offer + "%" : "-" %></td>
                <% let formattedDate = brand.offerValidUntil
                ? new Date(brand.offerValidUntil).toLocaleDateString('en-GB')
                : "-"; %>
                  <td class="text-center"><%= formattedDate %></td>
                  <td class="actions-cell" style="justify-content: center">
                    <!-- <button class="btn btn-edit btn-sm" type="button" title="Edit">
                      <i class="bi bi-pencil-fill"></i>
                    </button> -->
                    <% if (!brand.offer || brand.offer === 0) { %>
                      <button class="btn btn-offer-add btn-sm" type="button" title="Add Offer" onclick="addOffer('<%= brand._id %>')">
                        <i class="bi bi-tag-fill"></i>
                      </button>
                    <% } else { %>
                      <button class="btn btn-offer-remove btn-sm" type="button" title="Remove Offer" onclick="deleteOffer('<%= brand._id %>')">
                        <i class="bi bi-x-circle-fill"></i>
                      </button>
                    <% } %>
                    
                    <% if (brand.isBlocked) { %>
                      <a href="/admin/unblockBrand?id=<%= brand._id %>" 
                        class="btn btn-unblock btn-sm" 
                        title="Unblock" 
                     >
                       <i class="bi bi-unlock-fill"></i>
                     </a>
                     
                     
                    <% } else { %>
                      
                      <a href="/admin/blockBrand?id=<%= brand._id %>" 
                        class="btn btn-block btn-sm" 
                        title="Block" 
                       >
                       <i class="bi bi-lock-fill"></i>
                     </a>
                   
                    <% } %>
                    
                    <button class="btn btn-delete btn-sm" type="button" title="Delete" onclick="deleteBrand('<%= brand._id %>')">
                      <i class="bi bi-trash-fill"></i>
                    </button>
                    
                <% }) %>
                <% } %>
              </tbody>
            </table>
          </div>

          <!-- Pagination -->
          <div class="pagination-container">
            <nav aria-label="Page navigation">
              <ul class="pagination justify-content-center">
                <% if (currentPage > 1) { %>
                  <li class="page-item">
                    <a class="page-link" href="?page=<%= currentPage - 1 %><%= searchQuery ? '&search=' + searchQuery : '' %>">Previous</a>
                  </li>
                <% } %>
                <% for (let i = 1; i <= totalPages; i++) { %>
                  <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                    <a class="page-link" href="?page=<%= i %><%= searchQuery ? '&search=' + searchQuery : '' %>"><%= i %></a>
                  </li>
                <% } %>
                <% if (currentPage < totalPages) { %>
                  <li class="page-item">
                    <a class="page-link" href="?page=<%= currentPage + 1 %><%= searchQuery ? '&search=' + searchQuery : '' %>">Next</a>
                  </li>
                <% } %>
              </ul> 
            </nav>
          </div>
         
        </div>
      </div>
    </div>
  </section>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
    // Enable Bootstrap tooltips
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[title]'))
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
      return new bootstrap.Tooltip(tooltipTriggerEl)
    })
    document.getElementById('addBrandForm').addEventListener('submit', async function(e) {
      e.preventDefault();
    
      const form = e.target;
      const formData = new FormData(form);
    
      // Your validation here...
    
      const response = await fetch('/admin/brands', {
        method: 'POST',
        body: formData
      });
    
      const result = await response.json();
    
      if (result.success) {
        Swal.fire({
          icon: 'success',
          title: 'Brand added successfully',
          confirmButtonColor: '#198754'
        }).then(() => {
          window.location.href = '/admin/brands';
        });
      } else {
        Swal.fire('Error', result.message, 'error');
      }
    });
    

   /* document.querySelector('form[action="/admin/brands"]').addEventListener('submit', async function (e) {
      e.preventDefault();
    
      const form = e.target;
      const formData = new FormData(form);
    
      const name = formData.get('name').trim();
      const image = formData.get('image'); 
    
      if (!name || !image.name) {
        return Swal.fire({
          icon: 'warning',
          title: 'All fields are required!',
          text: 'Please fill in all the details before submitting.',
          confirmButtonColor: '#ffc107'
        });
      }
    
      
      if (!['image/png', 'image/jpeg'].includes(image.type)) {
        return Swal.fire({
          icon: 'error',
          title: 'Invalid Image Type',
          text: 'Only PNG or JPEG files are allowed.',
          confirmButtonColor: '#dc3545'
        });
      }
    

      try {
        const response = await fetch('/admin/brands', {
          method: 'POST',
          body: formData
        });
    
        const result = await response.json();
    
        if (result.success) {
          Swal.fire({
            icon: 'success',
            title: 'Success!',
            text: result.message,
            confirmButtonColor: '#198754'
          }).then(() => {
            window.location.reload();
          });
        } else {
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: result.message,
            confirmButtonColor: '#dc3545'
          });
        }
      } catch (err) {
        Swal.fire({
          icon: 'error',
          title: 'Server Error',
          text: 'Something went wrong!',
          confirmButtonColor: '#dc3545'
        });
      }
    });*/
    
    //Delete brand
    function deleteBrand(brandId) {
      Swal.fire({
        title: "Are you sure?",
        text: "This will permanently delete the brand!",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#d33",
        cancelButtonColor: "#3085d6",
        confirmButtonText: "Yes, delete it!"
      }).then((result) => {
        if (result.isConfirmed) {
          fetch(`/admin/deleteBrand/${brandId}`, {
            method: 'DELETE',
          })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              Swal.fire("Deleted!", data.message, "success").then(() => location.reload());
            } else {
              Swal.fire("Error!", data.message || "Failed to delete brand.", "error");
            }
          })
          .catch(() => {
            Swal.fire("Error!", "Something went wrong.", "error");
          });
        }
      });
    }
    //add offer
    function addOffer(brandId) {
      Swal.fire({
        title: 'Add brand Offer',
        html:
          `<input type="number" id="percentage" class="swal2-input" placeholder="Offer % (1–99)" min="1" max="99">
           <input type="date" id="validUntil" class="swal2-input" placeholder="Valid Until">`,
        focusConfirm: false,
        showCancelButton: true,
        confirmButtonText: 'Add',
        preConfirm: () => {
          const percentage = parseInt(document.getElementById('percentage').value);
          const validUntil = document.getElementById('validUntil').value;
    
          if (!percentage || percentage < 1 || percentage > 99) {
            Swal.showValidationMessage('Please enter a valid percentage (1–99)');
            return false;
          }
    
          if (!validUntil) {
            Swal.showValidationMessage('Please select an offer valid date');
            return false;
          }
    
          return fetch('/admin/addBrandOffer', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ brandId, percentage, validUntil })
          })
            .then(res => res.json())
            .then(data => {
              if (!data.status) {
                throw new Error(data.message);
              }
              return data;
            })
            .catch(err => {
              Swal.showValidationMessage(`Request failed: ${err.message}`);
            });
        }
      }).then((result) => {
        if (result.isConfirmed) {
          Swal.fire({
            icon: 'success',
            title: 'Success!',
            text: result.value.message,
            timer: 1500,
            showConfirmButton: false
          }).then(() => location.reload());
        }
      });
    }
    // Deleting offer
    function deleteOffer(brandId) {
      Swal.fire({
        title: 'Are you sure?',
        text: "This will remove the offer from this brand!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, delete it!'
      }).then((result) => {
        if (result.isConfirmed) {
          fetch('/admin/removeBrandOffer', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ brandId })
          })
          .then(response => response.json())
          .then(data => {
            if (data.status) {
              Swal.fire(
                'Deleted!',
                'The offer has been successfully removed.',
                'success'
              ).then(() => {
                location.reload();
              });
            } else {
              Swal.fire(
                'Error!',
                data.message || 'Failed to delete the offer.',
                'error'
              );
            }
          })
          .catch(error => {
            Swal.fire(
              'Error!',
              'Something went wrong while deleting the offer.',
              'error'
            );
          });
        }
      });
    }
    
    
  </script>
  <%- include("../../views/partials/admin/footer") %>
